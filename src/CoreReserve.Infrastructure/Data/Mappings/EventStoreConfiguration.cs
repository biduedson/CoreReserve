using CoreReserve.Core.SharedKernel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace CoreReserve.Infrastructure.Data.Mappings
{
    /// <summary>
    /// ConfiguraÃ§Ã£o do mapeamento da entidade <see cref="EventStore"/> no banco de dados.
    /// Define propriedades e restriÃ§Ãµes para garantir a integridade dos dados.
    /// </summary>
    internal class EventStoreConfiguration : IEntityTypeConfiguration<EventStore>
    {
        /// <summary>
        /// Configura o mapeamento da entidade EventStore.
        /// </summary>
        /// <param name="builder">O construtor de entidade.</param>
        public void Configure(EntityTypeBuilder<EventStore> builder)
        {
            // Define a chave primÃ¡ria da entidade
            builder
                .HasKey(eventStore => eventStore.Id);

            // Configura a propriedade Id como obrigatÃ³ria e impede que seja gerada automaticamente
            builder
                .Property(eventStore => eventStore.Id)
                .IsRequired() // NOT NULL
                .ValueGeneratedNever();

            // Define que o AggregateId Ã© obrigatÃ³rio
            builder
                .Property(eventStore => eventStore.AggregateId)
                .IsRequired(); // NOT NULL

            // Configura MessageType como obrigatÃ³rio e limita seu tamanho a 100 caracteres
            builder
                .Property(eventStore => eventStore.MessageType)
                .IsRequired() // NOT NULL
                .HasMaxLength(100);

            // Configura Data como obrigatÃ³rio e adiciona um comentÃ¡rio explicando que os dados sÃ£o um JSON serializado
            builder
                .Property(eventStore => eventStore.Data)
                .IsRequired() // NOT NULL
                .HasComment("Evento serializado em JSON");

            // Define OccurredOn como obrigatÃ³rio e renomeia a coluna para CreatedAt no banco de dados
            builder
                .Property(eventStore => eventStore.OccurredOn)
                .IsRequired() // NOT NULL
                .HasColumnName("CreatedAt");
        }
    }

    // -----------------------------------------
    // ðŸ”¹ EXPLICAÃ‡ÃƒO DO CÃ“DIGO ðŸ”¹
    // -----------------------------------------
    /*
    âœ… Classe EventStoreConfiguration â†’ Define o mapeamento da entidade EventStore no banco de dados. 
    âœ… MÃ©todo Configure() â†’ Configura restriÃ§Ãµes como chaves primÃ¡rias, obrigatoriedade de propriedades e limite de tamanho. 
    âœ… Propriedades marcadas como IsRequired â†’ Garante que os campos nÃ£o sejam nulos no banco de dados. 
    âœ… Propriedade Id â†’ Impede que seja gerada automaticamente, assegurando consistÃªncia com a lÃ³gica de identificaÃ§Ã£o. 
    âœ… Propriedade Data â†’ Armazena eventos serializados em JSON, Ãºtil para rastreabilidade e recuperaÃ§Ã£o de informaÃ§Ãµes. 
    âœ… A configuraÃ§Ã£o personalizada melhora a integridade dos dados e facilita auditoria e recuperaÃ§Ã£o de eventos no sistema. 
    */

}