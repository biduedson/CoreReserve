using CoreReserve.Domain.Entities.UserAggregate;
using CoreReserve.Infrastructure.Data.Mappings;
using Microsoft.EntityFrameworkCore;

namespace CoreReserve.Infrastructure.Data.Context
{
    /// <summary>
    /// Contexto do banco de dados para operaÃ§Ãµes de escrita.
    /// ResponsÃ¡vel por gerenciar e armazenar entidades do domÃ­nio.
    /// </summary>
    public class WriteDbContext(DbContextOptions<WriteDbContext> dbOptions)
        : BaseDbContext<WriteDbContext>(dbOptions)
    {
        /// <summary>
        /// Representa o conjunto de clientes armazenados no banco de dados.
        /// </summary>
        public DbSet<User> Users => Set<User>();

        /// <summary>
        /// Configura o modelo do banco de dados, aplicando as configuraÃ§Ãµes da entidade User.
        /// </summary>
        /// <param name="modelBuilder">O construtor do modelo.</param>
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.ApplyConfiguration(new UserConfiguration());
        }
    }

    // -----------------------------------------
    // ðŸ”¹ EXPLICAÃ‡ÃƒO DO CÃ“DIGO ðŸ”¹
    // -----------------------------------------
    /*
    âœ… Classe WriteDbContext â†’ Define o contexto de banco de dados para operaÃ§Ãµes de escrita. 
    âœ… HeranÃ§a de BaseDbContext â†’ Reutiliza configuraÃ§Ãµes globais do banco de dados. 
    âœ… Propriedade Users â†’ Define um conjunto do Entity Framework Core para manipulaÃ§Ã£o de entidades User. 
    âœ… MÃ©todo OnModelCreating() â†’ Aplica a configuraÃ§Ã£o da entidade User por meio da classe CustomerConfiguration. 
    âœ… Esse contexto permite a gestÃ£o eficiente de clientes, centralizando regras de persistÃªncia e garantindo consistÃªncia dos dados. 
    */

}