using System.Diagnostics.CodeAnalysis;
using CoreReserve.Core.SharedKernel;
using CoreReserve.Domain.Entities.UserAggregate;
using CoreReserve.Infrastructure.Data.Context;
using CoreReserve.Infrastructure.Data.Repositories;
using CoreReserve.Infrastructure.Data.Services;
using Microsoft.Extensions.DependencyInjection;

namespace CoreReserve.Infrastructure.Data
{
    /// <summary>
    /// Classe de configura√ß√£o dos servi√ßos de infraestrutura da aplica√ß√£o.
    /// </summary>
    [ExcludeFromCodeCoverage]
    public static class ConfigureServices
    {
        /// <summary>
        /// Adiciona o servi√ßo de cache em mem√≥ria √† cole√ß√£o de servi√ßos.
        /// </summary>
        /// <param name="services">A cole√ß√£o de servi√ßos.</param>
        public static void AddMemoryCacheService(this IServiceCollection services) =>
            services.AddScoped<ICacheService, MemoryCacheService>();

        /// <summary>
        /// Adiciona o servi√ßo de cache distribu√≠do √† cole√ß√£o de servi√ßos.
        /// </summary>
        /// <param name="services">A cole√ß√£o de servi√ßos.</param>
        public static void AddDistributedCacheService(this IServiceCollection services) =>
            services.AddScoped<ICacheService, DistributedCacheService>();

        /// <summary>
        /// Adiciona os servi√ßos essenciais da infraestrutura √† cole√ß√£o de servi√ßos.
        /// </summary>
        /// <param name="services">A cole√ß√£o de servi√ßos.</param>
        public static IServiceCollection AddInfrastructure(this IServiceCollection services) =>
            services
                .AddScoped<WriteDbContext>()
                .AddScoped<EventStoreDbContext>()
                .AddScoped<IUnitOfWork, UnitOfWork>()
                .AddScoped<IHashService, HashService>();


        /// <summary>
        /// Adiciona os reposit√≥rios que oferecem opera√ß√µes apenas de escrita √† cole√ß√£o de servi√ßos.
        /// </summary>
        /// <param name="services">A cole√ß√£o de servi√ßos.</param>
        public static IServiceCollection AddWriteOnlyRepositories(this IServiceCollection services) =>
             services
                .AddScoped<IEventStoreRepository, EventStoreRepository>()
                .AddScoped<IUserWriteOnlyRepository, UserWriteOnlyRepository>();
    }

    // -----------------------------------------
    // üîπ EXPLICA√á√ÉO DO C√ìDIGO üîπ
    // -----------------------------------------
    /*
    ‚úÖ Classe ConfigureServices ‚Üí Respons√°vel por registrar servi√ßos fundamentais da infraestrutura. 
    ‚úÖ M√©todos AddMemoryCacheService() e AddDistributedCacheService() ‚Üí Permitem alternar entre cache em mem√≥ria e cache distribu√≠do. 
    ‚úÖ M√©todo AddInfrastructure() ‚Üí Registra servi√ßos essenciais como contextos de banco de dados e Unit of Work. 
    ‚úÖ M√©todo AddWriteOnlyRepositories() ‚Üí Adiciona reposit√≥rios que s√≥ permitem opera√ß√µes de escrita. 
    ‚úÖ Uso de AddScoped ‚Üí Define o tempo de vida dos servi√ßos como escopo de requisi√ß√£o, garantindo reutiliza√ß√£o eficiente de inst√¢ncias. 
    ‚úÖ Essa configura√ß√£o modulariza a infraestrutura, facilitando testes e manuten√ß√£o da aplica√ß√£o. 
    */
}