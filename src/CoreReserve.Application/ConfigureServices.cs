using System.Diagnostics.CodeAnalysis;
using System.Reflection;
using CoreReserve.Application.Abstractions;
using CoreReserve.Application.Behaviors;
using FluentValidation;
using MediatR;
using Microsoft.Extensions.DependencyInjection;

namespace CoreReserve.Application
{
    /// <summary>
    /// Classe de configura√ß√£o de servi√ßos para a camada de aplica√ß√£o.
    /// Respons√°vel por registrar handlers de comandos e comportamentos no MediatR.
    /// </summary>
    [ExcludeFromCodeCoverage]
    public static class ConfigureServices
    {
        /// <summary>
        /// Adiciona handlers de comando √† cole√ß√£o de servi√ßos.
        /// </summary>
        /// <param name="services">A cole√ß√£o de servi√ßos.</param>
        /// <returns>A cole√ß√£o de servi√ßos configurada.</returns>
        public static IServiceCollection AddCommandHandlers(this IServiceCollection services)
        {
            var assembly = Assembly.GetAssembly(typeof(IApplicationMarker));
            return services
                .AddValidatorsFromAssembly(assembly, ServiceLifetime.Singleton)
                .AddMediatR(cfg => cfg.RegisterServicesFromAssembly(assembly)
                    .AddBehavior(typeof(IPipelineBehavior<,>), typeof(LoggingBehavior<,>)));
        }
    }

    // -----------------------------------------
    // üîπ EXPLICA√á√ÉO DO C√ìDIGO üîπ
    // -----------------------------------------
    /*
    ‚úÖ Classe ConfigureServices ‚Üí Respons√°vel por registrar servi√ßos da aplica√ß√£o na inje√ß√£o de depend√™ncia. 
    ‚úÖ M√©todo AddCommandHandlers() ‚Üí Registra handlers de comando e validadores na cole√ß√£o de servi√ßos. 
    ‚úÖ Uso de FluentValidation ‚Üí Permite valida√ß√£o de comandos com regras definidas em classes separadas. 
    ‚úÖ Uso de MediatR ‚Üí Garante comunica√ß√£o entre componentes desacoplados atrav√©s de comandos e eventos. 
    ‚úÖ Adi√ß√£o do LoggingBehavior ‚Üí Insere logging no pipeline do MediatR para rastrear execu√ß√£o de comandos. 
    ‚úÖ Essa abordagem melhora a modularidade, escalabilidade e testabilidade da aplica√ß√£o. 
    */

}