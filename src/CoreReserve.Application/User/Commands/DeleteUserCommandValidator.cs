using FluentValidation;

namespace CoreReserve.Application.User.Commands
{
    /// <summary>
    /// Validador para o comando <see cref="DeleteUserCommand"/>.
    /// Garante que o identificador do cliente seja vÃ¡lido antes da exclusÃ£o.
    /// </summary>
    public class DeleteUserCommandValidator : AbstractValidator<DeleteUserCommand>
    {
        /// <summary>
        /// ConfiguraÃ§Ã£o das regras de validaÃ§Ã£o para a exclusÃ£o de um cliente.
        /// </summary>
        public DeleteUserCommandValidator()
        {
            // O ID do cliente nÃ£o pode estar vazio.
            RuleFor(command => command.Id)
                .NotEmpty();
        }
    }
}
// -----------------------------------------
// ğŸ”¹ EXPLICAÃ‡ÃƒO DO CÃ“DIGO ğŸ”¹
// -----------------------------------------
/*
âœ… Classe DeleteUserCommandValidator â†’ Define regras de validaÃ§Ã£o para o comando DeleteUserCommand. 
âœ… Uso de FluentValidation â†’ Permite uma validaÃ§Ã£o fluida para garantir integridade dos dados de entrada. 
âœ… Regra de validaÃ§Ã£o do ID â†’ Garante que o identificador do cliente nÃ£o seja um valor vazio antes da exclusÃ£o. 
âœ… Essa abordagem evita erros e garante que apenas registros vÃ¡lidos sejam processados. 
*/