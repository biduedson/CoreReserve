using System;

namespace CoreReserve.Query.Abstractions
{
    /// <summary>
    /// Representa a interface base para modelos de consulta.
    /// Utilizado como contrato para identificar objetos que fazem parte da camada de leitura.
    /// </summary>
    public interface IQueryModel;

    /// <summary>
    /// Interface genÃ©rica para um modelo de consulta com chave identificadora.
    /// Garante que cada entidade de consulta possua um identificador Ãºnico do tipo especificado.
    /// </summary>
    /// <typeparam name="TKey">Tipo da chave identificadora.</typeparam>
    public interface IQueryModel<out TKey> : IQueryModel where TKey : IEquatable<TKey>
    {
        /// <summary>
        /// ObtÃ©m o identificador Ãºnico do modelo de consulta.
        /// </summary>
        TKey Id { get; }
    }
}
// -----------------------------------------
// ðŸ”¹ EXPLICAÃ‡ÃƒO DETALHADA ðŸ”¹
// -----------------------------------------

/*
âœ… Interface IQueryModel â†’ Define um contrato comum para todos os modelos de consulta.
âœ… Interface IQueryModel<TKey> â†’ Define uma interface genÃ©rica para modelos que possuem um identificador Ãºnico.
âœ… Uso de out TKey â†’ Garante que o tipo da chave seja apenas de saÃ­da, impedindo modificaÃ§Ãµes internas.
âœ… RestriÃ§Ã£o where TKey : IEquatable<TKey> â†’ Exige que a chave implementa comparaÃ§Ã£o de igualdade para garantir integridade dos dados.
âœ… Arquitetura baseada em CQRS â†’ MantÃ©m separaÃ§Ã£o entre leitura (query) e escrita (command), garantindo escalabilidade e organizaÃ§Ã£o.
âœ… Essa abordagem melhora a padronizaÃ§Ã£o e permite consultas eficientes sem risco de modificaÃ§Ã£o acidental.
*/
