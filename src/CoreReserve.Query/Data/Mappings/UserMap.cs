using CoreReserve.Query.Abstractions;
using CoreReserve.Query.QueriesModel;
using MongoDB.Bson.Serialization;
using MongoDB.Bson.Serialization.Serializers;

namespace CoreReserve.Query.Data.Mappings;

/// <summary>
/// Mapeamento do modelo de consulta de usuÃ¡rios para o banco de dados MongoDB.
/// Garante a estrutura correta dos dados armazenados, incluindo tipos e regras de serializaÃ§Ã£o.
/// </summary>
public class UserMap : IReadDbMapping
{
    /// <summary>
    /// Configura o mapeamento do modelo de usuÃ¡rios no MongoDB.
    /// Define regras de serializaÃ§Ã£o e garante que todos os campos necessÃ¡rios sejam corretamente registrados.
    /// </summary>
    public void Configure()
    {
        // Registra um mapeamento para a classe UserQueryModel, caso ainda nÃ£o esteja registrado.
        BsonClassMap.TryRegisterClassMap<UserQueryModel>(classMap =>
        {
            classMap.AutoMap(); // Mapeia automaticamente as propriedades da classe.
            classMap.SetIgnoreExtraElements(true); // Ignora elementos extras nÃ£o mapeados para evitar erros.

            // Define que os membros abaixo sÃ£o obrigatÃ³rios:
            classMap.MapMember(user => user.Id)
                  .SetIsRequired(true);

            classMap.MapMember(user => user.Name)
                  .SetIsRequired(true);

            classMap.MapMember(user => user.Gender)
                  .SetIsRequired(true);

            classMap.MapMember(user => user.Email)
                  .SetIsRequired(true);

            classMap.MapMember(user => user.CreatedAt)
               .SetIsRequired(true)
               .SetSerializer(new DateTimeSerializer(true)); // Serializa a data corretamente para o MongoDB.
        });
    }
}

// -----------------------------------------
// ğŸ”¹ EXPLICAÃ‡ÃƒO DETALHADA ğŸ”¹
// -----------------------------------------

/*
âœ… Classe UserMap â†’ Define o mapeamento do modelo de consulta de usuÃ¡rios para o banco de dados MongoDB.
âœ… ImplementaÃ§Ã£o de IReadDbMapping â†’ Interface para configuraÃ§Ã£o de mapeamentos no banco.
âœ… MÃ©todo Configure() â†’ ResponsÃ¡vel por definir como os objetos UserQueryModel serÃ£o armazenados e acessados.
âœ… Uso de AutoMap() â†’ Mapeia automaticamente todas as propriedades do modelo de usuÃ¡rio.
âœ… Uso de SetIgnoreExtraElements(true) â†’ Ignora campos extras para evitar erros na desserializaÃ§Ã£o de objetos.
âœ… ConfiguraÃ§Ã£o de campos obrigatÃ³rios â†’ Garante que os dados essenciais (ID, nome, gÃªnero, e-mail, senha e data de criaÃ§Ã£o) estejam sempre presentes.
âœ… SerializaÃ§Ã£o correta do campo CreatedAt â†’ Define a estrutura de armazenamento da data no MongoDB.
âœ… Arquitetura baseada em CQRS â†’ MantÃ©m separaÃ§Ã£o entre leitura e escrita, garantindo escalabilidade e organizaÃ§Ã£o.
âœ… Essa abordagem melhora a integridade dos dados e facilita a manutenÃ§Ã£o do banco de usuÃ¡rios.
*/